{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["generator","rough","createElement","id","x1","y1","x2","y2","type","roughElement","line","rectangle","points","x","y","text","Error","nearPoint","name","Math","abs","onLine","maxDistance","a","b","c","offset","distance","positionWithinElement","element","on","start","end","topLeft","topRight","bottomLeft","bottomRight","some","point","index","nextPoint","sqrt","pow","getElementAtPosition","elements","map","position","find","drawElement","roughCanvas","context","draw","stroke","length","d","reduce","acc","i","arr","x0","y0","push","join","getSvgPathFromStroke","getStroke","fill","Path2D","textBaseline","font","fillText","App","initialState","useState","setIndex","history","setHistory","action","overwrite","newState","historyCopy","updatedState","slice","prevState","useHistory","setElements","undo","redo","setAction","tool","setTool","selectedElement","setSelectedElement","textAreaRef","useRef","useLayoutEffect","canvas","document","getElementById","getContext","clearRect","width","height","forEach","useEffect","undoRedoFunction","event","metaKey","ctrlKey","key","shiftKey","addEventListener","removeEventListener","textArea","current","focus","value","updateElement","options","elementsCopy","textWidth","measureText","style","overflow","marginTop","checked","onChange","htmlFor","marginRight","padding","borderRadius","background","color","bottom","onClick","ref","onBlur","target","top","left","margin","border","outline","resize","whiteSpace","window","innerWidth","innerHeight","onMouseDown","clientX","clientY","xOffsets","yOffsets","offsetX","offsetY","onMouseMove","cursor","cursorForPosition","newPoints","_","newX1","newY1","coordinates","resizedCoordinates","onMouseUp","includes","adjustmentRequired","minX","min","maxX","max","adjustElementCoordinates","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a9549a8.chunk.js","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\nimport rough from \"roughjs/bundled/rough.esm\";\r\nimport getStroke from \"perfect-freehand\";\r\n\r\nconst generator = rough.generator();\r\n\r\nconst createElement = (id, x1, y1, x2, y2, type) => {\r\n  switch (type) {\r\n    case \"line\":\r\n    case \"rectangle\":\r\n      const roughElement =\r\n        type === \"line\"\r\n          ? generator.line(x1, y1, x2, y2)\r\n          : generator.rectangle(x1, y1, x2 - x1, y2 - y1);\r\n      return { id, x1, y1, x2, y2, type, roughElement };\r\n    case \"pencil\":\r\n      return { id, type, points: [{ x: x1, y: y1 }] };\r\n    case \"text\":\r\n      return { id, type, x1, y1, x2, y2, text: \"\" };\r\n    default:\r\n      throw new Error(`Type not recognised: ${type}`);\r\n  }\r\n};\r\n\r\nconst nearPoint = (x, y, x1, y1, name) => {\r\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\r\n};\r\n\r\nconst onLine = (x1, y1, x2, y2, x, y, maxDistance = 1) => {\r\n  const a = { x: x1, y: y1 };\r\n  const b = { x: x2, y: y2 };\r\n  const c = { x, y };\r\n  const offset = distance(a, b) - (distance(a, c) + distance(b, c));\r\n  return Math.abs(offset) < maxDistance ? \"inside\" : null;\r\n};\r\n\r\nconst positionWithinElement = (x, y, element) => {\r\n  const { type, x1, x2, y1, y2 } = element;\r\n  switch (type) {\r\n    case \"line\":\r\n      const on = onLine(x1, y1, x2, y2, x, y);\r\n      const start = nearPoint(x, y, x1, y1, \"start\");\r\n      const end = nearPoint(x, y, x2, y2, \"end\");\r\n      return start || end || on;\r\n    case \"rectangle\":\r\n      const topLeft = nearPoint(x, y, x1, y1, \"tl\");\r\n      const topRight = nearPoint(x, y, x2, y1, \"tr\");\r\n      const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\r\n      const bottomRight = nearPoint(x, y, x2, y2, \"br\");\r\n      const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\r\n      return topLeft || topRight || bottomLeft || bottomRight || inside;\r\n    case \"pencil\":\r\n      const betweenAnyPoint = element.points.some((point, index) => {\r\n        const nextPoint = element.points[index + 1];\r\n        if (!nextPoint) return false;\r\n        return onLine(point.x, point.y, nextPoint.x, nextPoint.y, x, y, 5) != null;\r\n      });\r\n      return betweenAnyPoint ? \"inside\" : null;\r\n    case \"text\":\r\n      return x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\r\n    default:\r\n      throw new Error(`Type not recognised: ${type}`);\r\n  }\r\n};\r\n\r\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\r\n\r\nconst getElementAtPosition = (x, y, elements) => {\r\n  return elements\r\n    .map(element => ({ ...element, position: positionWithinElement(x, y, element) }))\r\n    .find(element => element.position !== null);\r\n};\r\n\r\nconst adjustElementCoordinates = element => {\r\n  const { type, x1, y1, x2, y2 } = element;\r\n  if (type === \"rectangle\") {\r\n    const minX = Math.min(x1, x2);\r\n    const maxX = Math.max(x1, x2);\r\n    const minY = Math.min(y1, y2);\r\n    const maxY = Math.max(y1, y2);\r\n    return { x1: minX, y1: minY, x2: maxX, y2: maxY };\r\n  } else {\r\n    if (x1 < x2 || (x1 === x2 && y1 < y2)) {\r\n      return { x1, y1, x2, y2 };\r\n    } else {\r\n      return { x1: x2, y1: y2, x2: x1, y2: y1 };\r\n    }\r\n  }\r\n};\r\n\r\nconst cursorForPosition = position => {\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"br\":\r\n    case \"start\":\r\n    case \"end\":\r\n      return \"nwse-resize\";\r\n    case \"tr\":\r\n    case \"bl\":\r\n      return \"nesw-resize\";\r\n    default:\r\n      return \"move\";\r\n  }\r\n};\r\n\r\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\r\n  const { x1, y1, x2, y2 } = coordinates;\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"start\":\r\n      return { x1: clientX, y1: clientY, x2, y2 };\r\n    case \"tr\":\r\n      return { x1, y1: clientY, x2: clientX, y2 };\r\n    case \"bl\":\r\n      return { x1: clientX, y1, x2, y2: clientY };\r\n    case \"br\":\r\n    case \"end\":\r\n      return { x1, y1, x2: clientX, y2: clientY };\r\n    default:\r\n      return null; //should not really get here...\r\n  }\r\n};\r\n\r\nconst useHistory = initialState => {\r\n  const [index, setIndex] = useState(0);\r\n  const [history, setHistory] = useState([initialState]);\r\n\r\n  const setState = (action, overwrite = false) => {\r\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\r\n    if (overwrite) {\r\n      const historyCopy = [...history];\r\n      historyCopy[index] = newState;\r\n      setHistory(historyCopy);\r\n    } else {\r\n      const updatedState = [...history].slice(0, index + 1);\r\n      setHistory([...updatedState, newState]);\r\n      setIndex(prevState => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\r\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\r\n\r\n  return [history[index], setState, undo, redo];\r\n};\r\n\r\nconst getSvgPathFromStroke = stroke => {\r\n  if (!stroke.length) return \"\";\r\n\r\n  const d = stroke.reduce(\r\n    (acc, [x0, y0], i, arr) => {\r\n      const [x1, y1] = arr[(i + 1) % arr.length];\r\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\r\n      return acc;\r\n    },\r\n    [\"M\", ...stroke[0], \"Q\"]\r\n  );\r\n\r\n  d.push(\"Z\");\r\n  return d.join(\" \");\r\n};\r\n\r\nconst drawElement = (roughCanvas, context, element) => {\r\n  switch (element.type) {\r\n    case \"line\":\r\n    case \"rectangle\":\r\n      roughCanvas.draw(element.roughElement);\r\n      break;\r\n    case \"pencil\":\r\n      const stroke = getSvgPathFromStroke(getStroke(element.points));\r\n      context.fill(new Path2D(stroke));\r\n      break;\r\n    case \"text\":\r\n      context.textBaseline = \"top\";\r\n      context.font = \"24px sans-serif\";\r\n      context.fillText(element.text, element.x1, element.y1);\r\n      break;\r\n    default:\r\n      throw new Error(`Type not recognised: ${element.type}`);\r\n  }\r\n};\r\n\r\nconst adjustmentRequired = type => [\"line\", \"rectangle\"].includes(type);\r\n\r\nconst App = () => {\r\n  const [elements, setElements, undo, redo] = useHistory([]);\r\n  const [action, setAction] = useState(\"none\");\r\n  const [tool, setTool] = useState(\"text\");\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const textAreaRef = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const roughCanvas = rough.canvas(canvas);\r\n\r\n    elements.forEach(element => {\r\n      if (action === \"writing\" && selectedElement.id === element.id) return;\r\n      drawElement(roughCanvas, context, element);\r\n    });\r\n  }, [elements, action, selectedElement]);\r\n\r\n  useEffect(() => {\r\n    const undoRedoFunction = event => {\r\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\r\n        if (event.shiftKey) {\r\n          redo();\r\n        } else {\r\n          undo();\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", undoRedoFunction);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", undoRedoFunction);\r\n    };\r\n  }, [undo, redo]);\r\n\r\n  useEffect(() => {\r\n    const textArea = textAreaRef.current;\r\n    if (action === \"writing\") {\r\n      textArea.focus();\r\n      textArea.value = selectedElement.text;\r\n    }\r\n  }, [action, selectedElement]);\r\n\r\n  const updateElement = (id, x1, y1, x2, y2, type, options) => {\r\n    const elementsCopy = [...elements];\r\n\r\n    switch (type) {\r\n      case \"line\":\r\n      case \"rectangle\":\r\n        elementsCopy[id] = createElement(id, x1, y1, x2, y2, type);\r\n        break;\r\n      case \"pencil\":\r\n        elementsCopy[id].points = [...elementsCopy[id].points, { x: x2, y: y2 }];\r\n        break;\r\n      case \"text\":\r\n        const textWidth = document\r\n          .getElementById(\"canvas\")\r\n          .getContext(\"2d\")\r\n          .measureText(options.text).width;\r\n        const textHeight = 24;\r\n        elementsCopy[id] = {\r\n          ...createElement(id, x1, y1, x1 + textWidth, y1 + textHeight, type),\r\n          text: options.text,\r\n        };\r\n        break;\r\n      default:\r\n        throw new Error(`Type not recognised: ${type}`);\r\n    }\r\n\r\n    setElements(elementsCopy, true);\r\n  };\r\n\r\n  const handleMouseDown = event => {\r\n    if (action === \"writing\") return;\r\n\r\n    const { clientX, clientY } = event;\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      if (element) {\r\n        if (element.type === \"pencil\") {\r\n          const xOffsets = element.points.map(point => clientX - point.x);\r\n          const yOffsets = element.points.map(point => clientY - point.y);\r\n          setSelectedElement({ ...element, xOffsets, yOffsets });\r\n        } else {\r\n          const offsetX = clientX - element.x1;\r\n          const offsetY = clientY - element.y1;\r\n          setSelectedElement({ ...element, offsetX, offsetY });\r\n        }\r\n        setElements(prevState => prevState);\r\n\r\n        if (element.position === \"inside\") {\r\n          setAction(\"moving\");\r\n        } else {\r\n          setAction(\"resizing\");\r\n        }\r\n      }\r\n    } else {\r\n      const id = elements.length;\r\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\r\n      setElements(prevState => [...prevState, element]);\r\n      setSelectedElement(element);\r\n\r\n      setAction(tool === \"text\" ? \"writing\" : \"drawing\");\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = event => {\r\n    const { clientX, clientY } = event;\r\n\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      event.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\r\n    }\r\n\r\n    if (action === \"drawing\") {\r\n      const index = elements.length - 1;\r\n      const { x1, y1 } = elements[index];\r\n      updateElement(index, x1, y1, clientX, clientY, tool);\r\n    } else if (action === \"moving\") {\r\n      if (selectedElement.type === \"pencil\") {\r\n        const newPoints = selectedElement.points.map((_, index) => ({\r\n          x: clientX - selectedElement.xOffsets[index],\r\n          y: clientY - selectedElement.yOffsets[index],\r\n        }));\r\n        const elementsCopy = [...elements];\r\n        elementsCopy[selectedElement.id] = {\r\n          ...elementsCopy[selectedElement.id],\r\n          points: newPoints,\r\n        };\r\n        setElements(elementsCopy, true);\r\n      } else {\r\n        const { id, x1, x2, y1, y2, type, offsetX, offsetY } = selectedElement;\r\n        const width = x2 - x1;\r\n        const height = y2 - y1;\r\n        const newX1 = clientX - offsetX;\r\n        const newY1 = clientY - offsetY;\r\n        const options = type === \"text\" ? { text: selectedElement.text } : {};\r\n        updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type, options);\r\n      }\r\n    } else if (action === \"resizing\") {\r\n      const { id, type, position, ...coordinates } = selectedElement;\r\n      const { x1, y1, x2, y2 } = resizedCoordinates(clientX, clientY, position, coordinates);\r\n      updateElement(id, x1, y1, x2, y2, type);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = event => {\r\n    const { clientX, clientY } = event;\r\n    if (selectedElement) {\r\n      if (\r\n        selectedElement.type === \"text\" &&\r\n        clientX - selectedElement.offsetX === selectedElement.x1 &&\r\n        clientY - selectedElement.offsetY === selectedElement.y1\r\n      ) {\r\n        setAction(\"writing\");\r\n        return;\r\n      }\r\n\r\n      const index = selectedElement.id;\r\n      const { id, type } = elements[index];\r\n      if ((action === \"drawing\" || action === \"resizing\") && adjustmentRequired(type)) {\r\n        const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\r\n        updateElement(id, x1, y1, x2, y2, type);\r\n      }\r\n    }\r\n\r\n    if (action === \"writing\") return;\r\n\r\n    setAction(\"none\");\r\n    setSelectedElement(null);\r\n  };\r\n\r\n  const handleBlur = event => {\r\n    const { id, x1, y1, type } = selectedElement;\r\n    setAction(\"none\");\r\n    setSelectedElement(null);\r\n    updateElement(id, x1, y1, null, null, type, { text: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div style={{overflow:'hidden',height:'100vh',width:'100vw'}}>\r\n        <center>\r\n      <div style={{ marginTop:'9px',position:'fixed' }}>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"selection\"\r\n          checked={tool === \"selection\"}\r\n          onChange={() => setTool(\"selection\")}\r\n        />\r\n        <label htmlFor=\"selection\"  style={{marginRight:'15px', padding:'8px',borderRadius:'0.5rem',background:'black',color:'azure'}}>Selection</label>\r\n        <input type=\"radio\" id=\"line\" checked={tool === \"line\"} onChange={() => setTool(\"line\")} />\r\n        <label htmlFor=\"line\"  style={{marginRight:'15px', padding:'8px',borderRadius:'0.5rem',background:'black',color:'azure'}}>Line</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"rectangle\"\r\n          checked={tool === \"rectangle\"}\r\n          onChange={() => setTool(\"rectangle\")}\r\n        />\r\n        <label htmlFor=\"rectangle\"  style={{marginRight:'15px', padding:'8px',borderRadius:'0.5rem',background:'black',color:'azure'}}>Rectangle</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"pencil\"\r\n          checked={tool === \"pencil\"}\r\n          onChange={() => setTool(\"pencil\")}\r\n        />\r\n        <label htmlFor=\"pencil\"  style={{marginRight:'15px', padding:'8px',borderRadius:'0.5rem',background:'black',color:'azure'}}>Pencil</label>\r\n        <input type=\"radio\" id=\"text\" checked={tool === \"text\"} onChange={() => setTool(\"text\")} />\r\n        <label htmlFor=\"text\"  style={{marginRight:'15px', padding:'8px',borderRadius:'0.5rem',background:'black',color:'azure'}}>Text</label>\r\n        \r\n      </div>\r\n      </center>\r\n      <center>\r\n\r\n     \r\n      <div style={{position:'fixed' ,bottom: 0, padding: 10  }} >\r\n        <button  style={{marginRight:'15px', padding:'8px',borderRadius:'0.5rem',background:'black',color:'azure'}}  onClick={undo}>Undo</button>\r\n        <button   style={{marginRight:'15px', padding:'8px',borderRadius:'0.5rem',background:'black',color:'azure'}} onClick={redo}>Redo</button>\r\n      </div>\r\n      </center>\r\n      {action === \"writing\" ? (\r\n        <textarea\r\n          ref={textAreaRef}\r\n          onBlur={handleBlur}\r\n          style={{\r\n            position: \"fixed\",\r\n            top: selectedElement.y1 - 2,\r\n            left: selectedElement.x1,\r\n            font: \"24px sans-serif\",\r\n            margin: 0,\r\n            padding: 0,\r\n            border: 0,\r\n            outline: 0,\r\n            resize: \"auto\",\r\n            overflow: \"hidden\",\r\n            whiteSpace: \"pre\",\r\n            background: \"transparent\",\r\n          }}\r\n        />\r\n      ) : null}\r\n      <canvas\r\n        id=\"canvas\"\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n      >\r\n        Canvas\r\n      </canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      \r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n    \r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n    \r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        \r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n            \r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n            \r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}